@model MDT.ViewModels.EntryVM

@if (Model.Success)
{
    <h2 class="text-success">Successfully purchased entries.</h2>

}
else
{
    if (Model.Error)
    {
        <h2 class="text-danger">Problem purchasing entries</h2>
        <h3 class="text-danger">@Model.Message</h3>

        @Html.AntiForgeryToken()
        @Html.HiddenFor(model => model.DrawId);
        @Html.HiddenFor(model => model.DrawDate);
        @Html.HiddenFor(model => model.DrawTypeId);
        @Html.HiddenFor(model => model.GameName);
        @Html.HiddenFor(model => model.UserId);
        @Html.HiddenFor(model => model.UserName);
        @Html.HiddenFor(model => model.EntryId);
        <div class="row">
            <div class="form-horizontal">
                <div class="form-group">
                    @Html.LabelFor(model => model.EntryCount, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.EntryCount, new { htmlAttributes = new { @class = "form-control formVal", @autocomplete = "off" } })
                        @Html.ValidationMessageFor(model => model.EntryCount, "", new { @class = "text-danger" })
                    </div>
                </div>
                <button type="button" id="cancelAddEntries" class="btn btn-danger">Cancel</button>
                <button type="submit" class="btn btn-success" id="submitEntriesBtn">Add Entries</button>
            </div>
        </div>
    }
}
