@model MDT.ViewModels.NewGroupVM

<div class="modal-header">
    <button type="button" class="close" data-dismiss="modal">&times;</button>
    <h4 class="modal-title">Request For A New Group</h4>
</div>
<div class="modal-body">


    @using (Ajax.BeginForm("CreateNew", "Group", new AjaxOptions { HttpMethod = "POST",OnSuccess="hideModal", OnFailure="showModalError", UpdateTargetId="modaldiv" }, htmlAttributes: new { id = "ModalForm" }))
    {

        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                @Html.LabelFor(model => model.GroupName, htmlAttributes: new { @class = "control-label col-xs-4" })
                <div class="col-xs-8">
                    @Html.EditorFor(model => model.GroupName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.GroupName, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Reason, htmlAttributes: new { @class = "control-label col-xs-4" })
                <div class="col-xs-8">
                    @Html.TextAreaFor(model => model.Reason, htmlAttributes: new { @class = "form-control", placeholder = "Reason for creating the group" } ) <br />
                    @Html.ValidationMessageFor(model => model.Reason, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-xs-8">
                    <input type="submit" value="Submit" class="btn btn-success" />
                </div>
            </div>
        </div>
    }
</div>