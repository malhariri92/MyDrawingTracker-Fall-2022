@using MDT.Models
@using MDT.Models.DTO
@using MDT.ViewModels
@model  UserPermissionVM
@{
    UserDTO user = (UserDTO)Session["User"];
    GroupDTO group = (GroupDTO)Session["Group"];
}
<div class="modal-header">
    <button type="button" class="close" data-dismiss="modal">&times;</button>
</div>
<div class="modal-body">
    <h2 class="text-center">@Html.DisplayFor(model => model.UserName)</h2>
    <div class="form-horizontal">
        <div class="form-group">
            @Html.LabelFor(model => model.CanManageUsers, htmlAttributes: new { @class = "control-label col-xs-8" })
            <div class="col-xs-4">
                @Html.EditorFor(model => model.CanManageUsers, new
                {
                    htmlAttributes = new
                    {
                        data_toggle = "toggle",
                        data_size = "mini",
                        data_off = "No",
                        data_on = "Yes",
                        id = "manageUsers"
                    }
                })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.CanManageDrawTypes, htmlAttributes: new { @class = "control-label col-xs-8" })
            <div class="col-xs-4">
                @Html.EditorFor(model => model.CanManageDrawTypes, new
                {
                    htmlAttributes = new
                    {
                        data_toggle = "toggle",
                        data_size = "mini",
                        data_off = "No",
                        data_on = "Yes",
                        id = "manageDrawTypes"
                    }
                })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.CanManageDrawings, htmlAttributes: new { @class = "control-label col-xs-8" })
            <div class="col-xs-4">
                @Html.EditorFor(model => model.CanManageDrawings, new
                {
                    htmlAttributes = new
                    {
                        data_toggle = "toggle",
                        data_size = "mini",
                        data_off = "No",
                        data_on = "Yes",
                        id = "manageDrawings"
                    }
                })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.CanManageTransactions, htmlAttributes: new { @class = "control-label col-xs-8" })
            <div class="col-xs-4">
                @Html.EditorFor(model => model.CanManageTransactions, new
                {
                    htmlAttributes = new
                    {
                        data_toggle = "toggle",
                        data_size = "mini",
                        data_off = "No",
                        data_on = "Yes",
                        id = "manageTransactions"
                    }
                })
            </div>
        </div>
    </div>
</div>

    <script type="text/javascript">

    $(document).ready(function () {
        $('#manageUsers').bootstrapToggle();
        $('#manageDrawTypes').bootstrapToggle();
        $('#manageDrawings').bootstrapToggle();
        $('#manageTransactions').bootstrapToggle();
    });

    $(document).on('change', '#manageUsers', function ()
    {
        let flag = $(this).is(':checked');

        $.get(`@Url.Action("UpdateUserPermission", "User", null, null)?flag=${flag}&UserId=${@Model.UserId}`);
        $(function () {
            $('#manageUsers').bootstrapToggle();
        });
    });

    $(document).on('change', '#manageDrawTypes', function ()
    {
        let flag = $(this).is(':checked');

        $.get(`@Url.Action("UpdateDrawTypePermission", "User", null, null)?flag=${flag}&UserId=${@Model.UserId}`);

        $(function () {
            $('#manageDrawTypes').bootstrapToggle();
        });
    });

     $(document).on('change', '#manageDrawings', function ()
    {
        let flag = $(this).is(':checked');

         $.get(`@Url.Action("UpdateDrawingPermission", "User", null, null)?flag=${flag}&UserId=${@Model.UserId}`);
         $(function () {
             $('#manageDrawings').bootstrapToggle();
         });
    });

     $(document).on('change', '#manageTransactions', function ()
    {
        let flag = $(this).is(':checked');

         $.get(`@Url.Action("UpdateTransactionPermission", "User", null, null)?flag=${flag}&UserId=${@Model.UserId}`);
         $(function () {
             $('#manageTransactions').bootstrapToggle();
         });
    });

    </script>
