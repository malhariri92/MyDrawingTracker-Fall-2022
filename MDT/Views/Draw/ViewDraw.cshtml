@using MDT.Models
@using MDT.Models.DTO
@using MDT.ViewModels
@model Tuple<DrawVM, DrawTypeVM, List<DrawDTO>, string>
@{
    ViewBag.Title = "View Draw";
    UserDTO user = (UserDTO)Session["User"];
}

@if (Model.Item4 == "viewDraw")
{
    <div class="row text-center ">
        <h1>Drawing for @Model.Item1.DrawTypeName</h1>
    </div>
    <div class="row">
        <div class="col-md-7 col-xs-12" id="divDesc">
            @{
                if (Model.Item1.Descriptions.Any())
                {
                    Html.RenderPartial("DrawDescription", Model.Item1);
                }
                else
                {
                    Html.RenderPartial("DrawDescriptionEdit", Model.Item1);
                }

            }
        </div>
        <div class="col-md-5 col-xs-12">
            @{
                Html.RenderPartial("DrawRules", Model.Item1);
            }
        </div>
        <div>
            @Html.ActionLink("Add Entry", "GoToEntryForm", "Entry",
                new { drawId = Model.Item1.DrawId, drawTypeId = Model.Item1.DrawTypeId, userId = user.UserId }, new { @class = "btn btn-primary" })
        </div>
    </div>
    <div class="row">
        <button class="btn btn-primary" id="toggleDrawTypeBtn">Show DrawType</button>
        @{
            Html.RenderPartial("CreateDrawType", Model.Item2);
        }
    </div>
    <div class="row">
        <button class="btn btn-primary" id="toggleDrawListBtn">Show EditList</button>
        @{
            Html.RenderPartial("EditList", Model.Item3);
        }
    </div>
    <div class="row">
        @{ 
            //Html.RenderPartial("CreateDraw", Model.Item4);
        }
    </div>

    if (WebManager.IsGroupAdmin(user.CurrentGroupId, user.UserId))
    {
        <script type="text/javascript">
        let ct = @Model.Item1.Descriptions.Count;

        $(document).on('click', '#btnAddDesc', function () {
            $('#descedit').append(
                `<div id="desc-${ct}">
                     <div class="row">
                     <input id="Descriptions_${ct}__SortOrder" name="Descriptions[${ct}].SortOrder" type="hidden" value="${ct}">
                     <input id="Descriptions_${ct}__IsActive" name="Descriptions[${ct}].IsActive" type="hidden" value="True">
                     <div class="col-xs-9">
                     <input class="form-control big-input text-box single-line" data-val="true" data-val-maxlength="Title cannot exceed 50 characters" data-val-maxlength-max="50" id="Descriptions_${ct}__Title" name="Descriptions[${ct}].Title" placeholder="Paragraph Heading" type="text" value="">
                     </div>
                     <div class="col-xs-1 text-right">
                     <button type="button" data-desc-id="${ct}" class="btn btn-xs btn-danger DescDelete" title="Delete"><span class="fa fa-trash-o"></span></button>
                     </div>
                     </div>
                     <div class="row">
                     <div class="col-xs-10">
                     <textarea class="form-control" cols="20" id="Descriptions_${ct}__TextBody" name="Descriptions[${ct}].TextBody" placeholder="Paragraph Text" rows="4"></textarea>
                     </div>
                     </div>
                     <br /><br />
                     </div>`);
            ct++;
        });

        $(document).on('click', '.DescDelete', function () {
            let id = $(this).attr('data-desc-id');
            $(`#Descriptions_${id}__IsActive`).val('False');
            $(`#desc-${id}`).hide();
        });

        $(document).on('click', '#btnCancelDescEdit', function () {
            $('#divDesc').empty();
            $('#divDesc').load('@Url.Action("DrawDescription", "Draw", new { id = Model.Item1.DrawId })');
        });

        $(document).on('click', '#btnDescEdit', function () {
            $('#divDesc').empty();
            $('#divDesc').load('@Url.Action("DrawDescriptionEdit", "Draw", new { id = Model.Item1.DrawId })');
        });

        $(document).on('click', '#toggleDrawTypeBtn', function () {
            $(this).text($(this).text() == "Show DrawType" ? "Hide DrawType" : "Show DrawType");
            $('#createEditDrawTypeForm').toggle();
        });

            $(document).on('click', '#toggleDrawListBtn', function () {
            $(this).text($(this).text() == "Show EditList" ? "Hide EditList" : "Show EditList");
            $('#editList').toggle();
        });

        </script>
    }
}