@using MDT.Models
@using MDT.Models.DTO
@using MDT.ViewModels
@model DrawTypeVM

@{
    UserDTO user = (UserDTO)Session["User"];
    GroupDTO group = (GroupDTO)Session["Group"];
    UserOptionVM udto = Model.UserOptions.Find(u => u.UserId == user.UserId);
}
<br />
<br />
<div class="row">
    <h3>
        Rules
        @if (WebManager.IsGroupAdmin(user.CurrentGroupId, user.UserId) || user.CanManageDrawTypes)
        {
            <button type="button" class="btn btn-xs btn-success btnModal" data-action="@Url.Action("EditDrawType", "Draw", new { id = Model.DrawTypeId })" title="Edit Rules"><span class="fa fa-pencil"></span></button>
        }
    </h3>
</div>
<div class="row">
    <div class="col-xs-12">
        <b>Entry Cost: </b> @Model.EntryCost <br />
        <b>Maximum Entries: </b> @(Model.MaxEntriesPerUser == 0 ? "No Limit" : $"{Model.MaxEntriesPerUser}" ) <br />
        <b>Entries Selected: </b> @Model.EntriesToDraw <br />
        @if (Model.EntriesToDraw > 1)
        {
            <b>Single Prize Per Entry:  @(Model.RemoveDrawnEntries ? "Yes" : $"No" )</b> <br />
            <b>Single Prize Per User:  @(Model.RemoveDrawnUsers ? "Yes" : $"No" )</b> <br />
        }
        <b>Number of Draws:  @Model.NumberOfDraws</b> <br />
        @if (Model.NumberOfDraws > 1)
        {
            <b>Using: </b> @(Model.PassDrawnToNext ? "Drawn Entries" : "Undrawn Entries") <br />
        }

        @if (udto == null)
        {
            if (WebManager.IsGroupAdmin(group.GroupId, user.UserId) || !Model.JoinConfirmationRequired)
            {
                <button class="btn btn-sm btn-success btnPanel" type="button" data-action="@Url.Action("JoinDrawType", "Draw", new { id = Model.DrawTypeId})" data-panel="divRules">Join</button>
            }
            else
            {
                <button class="btn btn-sm btn-warning btnPanel" type="button" data-action="@Url.Action("JoinDrawType", "Draw", new { id = Model.DrawTypeId})" data-panel="divRules">Request to Join</button>
            }
        }
        else
        {
            if (udto.IsApproved)
            {
                <b>Status: </b> <span> Joined </span><br />
                if (Model.AllowAllocation)
                {
                    <button class="btn btn-sm btn-success btnModal" type="button" id="btnAllocate" data-action="@Url.Action("UpdateAllocation", "Draw", new { id = Model.DrawTypeId})">Allocate Funds</button>
                }
            }
            else
            {
                <button class="btn btn-sm btn-warning" type="button" disabled title="Pending approval from group admin">Request to Join</button>
            }
        }
    </div>
</div>
