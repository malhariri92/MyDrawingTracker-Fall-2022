@using MDT.Models
@using MDT.Models.DTO
@using MDT.ViewModels
@model DrawVM

@{
    UserDTO user = (UserDTO)Session["User"];
    int UserEntries = Model.Entries.Find(e => e.UserId == user.UserId)?.EntryCount ?? 0;
}
<br />
<br />
<div class="row">
    <div class="col-xs-12">
        <h3>
            Rules
            @if ((WebManager.IsGroupAdmin(user.CurrentGroupId, user.UserId) || user.CanManageDrawings) && !Model.IsActive && Model.Results == null)
            {
                <button type="button" class="btn btn-xs btn-success btnModal" title="Edit Rules" data-action="@Url.Action("EditDraw", "Draw", new { id = Model.DrawId })"><span class="fa fa-pencil"></span></button>
            }
        </h3>
    </div>
</div>
<div class="row">
    <div class="col-xs-12">
        @if (Model.IsActive)
        {
            <b>Started: </b> @Model.StartDate.Value.ToString("yyyy-MM-dd HH:mm") <br />
        }
        <b>Ends: </b> @($"{Model.EndDate:yyyy-MM-dd} {Model.EndTime:hh\\:mm}")<br />
        <b>Entry Cost: </b> @Model.EntryCost <br />
        <b>Maximum Entries: </b> @(Model.MaxEntriesPerUser == 0 ? "No Limit" : $"{Model.MaxEntriesPerUser}" ) <br />
        <b>Entries Selected: </b> @Model.EntriesToDraw <br />
        @if (Model.EntriesToDraw > 1)
        {
            <b>Single Prize Per Entry:  @(Model.RemoveDrawnEntries ? "Yes" : $"No" )</b> <br />
            <b>Single Prize Per User:  @(Model.RemoveDrawnUsers ? "Yes" : $"No" )</b> <br />
        }
        @if (Model.NextDrawId != null)
        {
            @Html.ActionLink("Next Drawing", "ViewDraw", "Draw", new { id = Model.NextDrawId.Value }, null) <br />
            <b>Using: </b> @(Model.PassDrawnToNext ? "Drawn Entries" : "Undrawn Entries") <br />
        }
        <b>Total Entries: </b> @Model.Entries.Sum(e => e.EntryCount) <br />
        <b>Users Entered: </b> @Model.Entries.Count <br />
        @if (UserEntries > 0)
        {
            <b>You have: </b> @(UserEntries == 1 ? "1 entry" : $"{UserEntries} entries")
            if (Model.IsActive)
            {
                <button type="button" class="btn btn-xs btn-danger btnModal" data-action="@Url.Action("RemoveEntries", "Draw", new { id = Model.DrawId })" title="Remove Entries"><span class="fa fa-times-circle"></span></button>
            }
            <br />
        }

        @if (Model.IsActive)
        {
            <button class="btn btn-sm btn-success btnModal" type="button" data-action="@Url.Action("AddEntries", "Draw", new { id=Model.DrawId})">Get Entries</button>
        }
        else
        {
            if (Model.Results != null)
            {
                <button class="btn btn-sm btn-info btnModal" type="button" data-action="@Url.Action("Results", "Draw", new { id = Model.DrawId })">View Results</button>
            }
            else
            {
                if (WebManager.IsGroupAdmin(user.CurrentGroupId, user.UserId) || user.CanManageDrawings)
                {
                    if (Model.EndDate > DateTime.Now)
                    {
                        <button class="btn btn-sm btn-success" type="button" onclick="window.top.location.href='@Url.Action("StartDraw", "Draw", new { id = Model.DrawId })'">Start Drawing</button>
                    }
                    else
                    {
                        <button class="btn btn-sm btn-success" type="button" disabled title="Cannot start a draw with an end date that has already passed.">Start Drawing</button>
                    }
                }
            }
        }
    </div>
</div>
