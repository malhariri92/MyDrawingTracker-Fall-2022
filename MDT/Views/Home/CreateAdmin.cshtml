@model MDT.ViewModels.AdminUserVM

@{
    ViewBag.Title = "Create Admin Account";
}

@using (Html.BeginForm("CreateAdmin", "Home", null, FormMethod.Post, htmlAttributes: new { @id = "SignUpForm" }))
{
    @Html.AntiForgeryToken()

<div class="form-horizontal" style="margin-top: 50px;">
    <h3 class="text-center bold" style="margin-bottom: 30px;">Create Group Admin Account</h3>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(model => model.UserName, htmlAttributes: new { @class = "control-label col-xs-5" })
        <div class="col-xs-4">
            @Html.EditorFor(model => model.UserName, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.EmailAddress, htmlAttributes: new { @class = "control-label col-xs-5" })
        <div class="col-xs-4">
            @Html.EditorFor(model => model.EmailAddress, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.EmailAddress, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.GroupName, htmlAttributes: new { @class = "control-label col-xs-5" })
        <div class="col-xs-6">
            @Html.EditorFor(model => model.GroupName, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.GroupName, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-xs-5" })
        <div class="col-xs-6">
            @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.ConfirmPass, htmlAttributes: new { @class = "control-label col-xs-5" })
        <div class="col-xs-6">
            @Html.EditorFor(model => model.ConfirmPass, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.ConfirmPass, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-xs-7 pull-right">
            <input type="submit" class="col-xs-6 btn btn-success" value="Create" />

        </div>
        <div class="col-xs-7 pull-right">
            <br />
            <a class="col-xs-6" href="@Url.Action("SignIn", "Home")">Sign In</a>
            <br />
        </div>
    </div>
    @{
        if (ViewBag.SuccessMessage != null)
        {
            <div class="col-xs-7 pull-right" style="color:green;">
                @ViewBag.SuccessMessage
            </div>
        }
    }
</div>
}
