@using MDT.ViewModels
@model NewUserVM

@using (Ajax.BeginForm("NewUser", "Home", new AjaxOptions { HttpMethod = "Post", UpdateTargetId = "modaldiv", OnSuccess="hideModalSpinner", OnFailure="showModalError" }, new { id = "ModalForm" }))
{
<div class="modal-header">
    <button type="button" class="close" data-dismiss="modal">&times;</button>
    <div class="row text-center">
        @Html.EditorFor(model => model.CreateAdmin, new { htmlAttributes = new { @id = "CreateToggle", data_toggle = "toggle", data_on = "Group Admin", data_off = "Group User", data_width = "125", data_onstyle = "primary", data_offstyle = "info" } })
    </div>
    <div class="row text-center">
        <p class="groupUser">Create a new user account and join an existing group.</p>
        <p class="groupAdmin" style="display:none;">Create a new user account and a new group.</p>
    </div>
</div>

    <div class="modal-body">
        <div class="row">
            @Html.AntiForgeryToken()
            <div class="form-horizontal">
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="form-group">
                    @Html.LabelFor(model => model.UserName, htmlAttributes: new { @class = "control-label col-xs-4" })
                    <div class="col-xs-8">
                        @Html.EditorFor(model => model.UserName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.EmailAddress, htmlAttributes: new { @class = "control-label col-xs-4" })
                    <div class="col-xs-8">
                        @Html.EditorFor(model => model.EmailAddress, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.EmailAddress, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-xs-4" })
                    <div class="col-xs-8">
                        @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.ConfirmPass, htmlAttributes: new { @class = "control-label col-xs-4" })
                    <div class="col-xs-8">
                        @Html.EditorFor(model => model.ConfirmPass, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.ConfirmPass, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="groupAdmin" style="display:none">

                    <div class="form-group">
                        @Html.LabelFor(model => model.GroupName, htmlAttributes: new { @class = "control-label col-xs-4" })
                        <div class="col-xs-8">
                            @Html.EditorFor(model => model.GroupName, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.GroupName, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Reason, htmlAttributes: new { @class = "control-label col-xs-4" })
                        <div class="col-xs-6">
                            @Html.TextAreaFor(model => model.Reason, new { @class = "form-control", placeholder = "Reason for creating the group" }) <br />
                            @Html.ValidationMessageFor(model => model.Reason, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

                <div class="groupUser" style="display:none">
                    <div class="form-group">
                        @Html.LabelFor(model => model.AccessCode, htmlAttributes: new { @class = "control-label col-xs-4" })
                        <div class="col-xs-8">
                            @Html.EditorFor(model => model.AccessCode, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.AccessCode, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
            </div>

            <div class="modal-footer">
                <div class="form-group">
                    <div class="col-xs-12 text-center">
                        <button type="button" class="btn btn-warning btnModal" data-action="@Url.Action("SignIn", "Home", null, null)">Back</button>
                        <button type="submit" class="btn btn-success">Create</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
}



<script type="text/javascript">
    $(function () {
        $('#CreateToggle').bootstrapToggle();
        CreateToggleChanged();
    });
</script>
