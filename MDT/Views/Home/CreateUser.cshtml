@model MDT.ViewModels.GroupUserVM

@{
    ViewBag.Title = "Create User Account";
}

@using (Ajax.BeginForm("CreateUser", "Home", new AjaxOptions { HttpMethod = "POST", UpdateTargetId = "CreateUser" }))
{
    @Html.AntiForgeryToken()

<div class="form-horizontal" style="margin-top: 50px;">
    <h3 class="text-center bold" style="margin-bottom: 30px;">Create Group User Account</h3>
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(model => model.UserName, htmlAttributes: new { @class = "control-label col-xs-5" })
        <div class="col-xs-4">
            @Html.EditorFor(model => model.UserName, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.EmailAddress, htmlAttributes: new { @class = "control-label col-xs-5" })
        <div class="col-xs-4">
            @Html.EditorFor(model => model.EmailAddress, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.EmailAddress, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.AccessCode, htmlAttributes: new { @class = "control-label col-xs-5" })
        <div class="col-xs-6">
            @Html.EditorFor(model => model.AccessCode, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.AccessCode, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-xs-5" })
        <div class="col-xs-6">
            @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.ConfirmPassword, htmlAttributes: new { @class = "control-label col-xs-5" })
        <div class="col-xs-6">
            @Html.EditorFor(model => model.ConfirmPassword, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-xs-7 pull-right">
            <input type="submit" class="col-xs-6 btn btn-success" value="Save" />

        </div>
    </div>
    @{
        if (ViewBag.SuccessMessage != null)
        {
            <div class="col-xs-7 pull-right" style="color:green;">
                @ViewBag.SuccessMessage
            </div>
        }

        if (ViewBag.FailureMessage != null)
        {
            <div class="col-xs-7 pull-right" style="color:red;">
                @ViewBag.FailureMessage
            </div>
        }
    }
</div>
}